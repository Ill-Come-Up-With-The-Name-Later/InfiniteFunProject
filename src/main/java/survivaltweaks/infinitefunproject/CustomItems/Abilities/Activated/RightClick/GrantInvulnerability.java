package survivaltweaks.infinitefunproject.CustomItems.Abilities.Activated.RightClick;

import org.bukkit.Bukkit;
import org.bukkit.Particle;
import org.bukkit.attribute.Attribute;
import org.bukkit.entity.Entity;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Player;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import survivaltweaks.infinitefunproject.CustomItems.Abilities.Activated.ActivatedAbility;
import survivaltweaks.infinitefunproject.InfiniteFunProject;

import java.util.ArrayList;

import static survivaltweaks.infinitefunproject.InfiniteFunProject.*;
import static survivaltweaks.infinitefunproject.Periodic.Events.Anomalies.MakePlayersInvincible.grantInvulnerability;

public class GrantInvulnerability implements ActivatedAbility {

    int baseDuration = 10;

    @Override
    public void activate(Player player) {
        grantInvulnerability(player, baseDuration * 20);
        drawExpandingCircle(player, 1, 5, 1, 25, Particle.HAPPY_VILLAGER);

        ArrayList<Entity> nearby = (ArrayList<Entity>) circularNearbyEntities(player, 5);

        for(Entity entity : nearby) {
            if(entity instanceof Player) {
                Player other = (Player) entity;

                int duration = baseDuration - (int) Math.floor(distanceBetween(player, other));
                grantInvulnerability(player, duration * 20);
            }
        }

        Bukkit.getScheduler().runTaskLater(InfiniteFunProject.plugin, () -> {
            player.setHealth(player.getAttribute(Attribute.MAX_HEALTH).getBaseValue());

            player.addPotionEffect(new PotionEffect(PotionEffectType.RESISTANCE, 400, 1, false, false, true));
            player.addPotionEffect(new PotionEffect(PotionEffectType.REGENERATION, 400, 1, false, false, true));
            player.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 400, 1, false, false, true));
            player.addPotionEffect(new PotionEffect(PotionEffectType.JUMP_BOOST, 400, 1, false, false, true));
            player.addPotionEffect(new PotionEffect(PotionEffectType.ABSORPTION, 400, 4, false, false, true));
        }, (baseDuration * 20L) + 1);
    }

    @Override
    public int getCooldown() {
        return 1200;
    }

    @Override
    public String getDescription() {
        return "Grants the user invulnerability\nfor 10 seconds.\n\nNearby players also\ngain invulnerability." +
                "\n\nBuffs the user post\ninvulnerability.";
    }

    @Override
    public boolean oneTimeUse() {
        return false;
    }

    @Override
    public boolean cooldownModifiable() {
        return false;
    }
}
